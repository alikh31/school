swagger: "2.0"
info:
  version: "0.0.1"
  title: mqtt credentials service

host: localhost:3010
basePath: /

schemes:
  - http

paths:
  /auth/user:
    x-swagger-router-controller: rabbitmq_auth
    get:
      description: Check the permission for user
      operationId: user
      parameters:
        - name: username
          in: query
          description: username of rabbitMq user
          required: true
          type: string
          x-example: "user1"
        - name: password
          in: query
          description: password of rabbitMq user
          required: true
          type: string
          x-example: "pass1234"
      responses:
        "200":
          description: return `allow [ tags ]`
          examples:
            text/plain; charset=utf-8:
              allow [ administrator ]
        "403":
          description: return `deny`
          examples:
            text/plain; charset=utf-8:
              deny

  /auth/vhost:
    x-swagger-router-controller: rabbitmq_auth
    get:
      description: Check the permission for vitual host
      operationId: vhost
      parameters:
        - name: username
          in: query
          description: username of rabbitMq user
          required: true
          type: string
          x-example:
            - "user1"
        - name: vhost
          in: query
          description: vhost needs to be accessed
          required: true
          type: string
          x-example:
            - "dev"
      responses:
        "200":
          description: return `allow`
          examples:
            text/plain; charset=utf-8:
              allow
        "403":
          description: return `deny`
          schema:
            type: string
          examples:
            text/plain; charset=utf-8:
              deny

  /auth/resource:
    x-swagger-router-controller: rabbitmq_auth
    get:
      description: Check the permission for resource
      operationId: resource
      parameters:
        - name: username
          in: query
          description: username of rabbitMq user
          required: true
          type: string
          x-example:
            - "user1"
        - name: vhost
          in: query
          description: vhost needs to be accessed
          required: true
          type: string
          x-example:
            - "dev"
        - name: resource
          in: query
          description: type of the resource to access
          required: true
          type: string
          enum:
            - queue
            - topic
            - exchange
        - name: name
          in: query
          description: name of the resouce to be accessed
          required: true
          type: string
          x-example:
            - "mqtt-subscription-paho492EE1E60A5D2C452Aqos0"
        - name: permission
          in: query
          description: type of permission
          required: true
          type: string
          enum:
            - configure
            - read
            - write
      responses:
        "200":
          description: return `allow`
          examples:
            text/plain; charset=utf-8:
              allow
        "403":
          description: return `deny`
          schema:
            type: string
          examples:
            text/plain; charset=utf-8:
              deny

  /swagger:
    x-swagger-pipe: swagger_raw